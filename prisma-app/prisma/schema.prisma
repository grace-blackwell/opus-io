// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-clients-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Icon {
  settings
  chart
  calendar
  check
  chip
  compass
  database
  flag
  home
  info
  link
  lock
  messages
  notification
  payment
  power
  receipt
  shield
  star
  tune
  videorecorder
  wallet
  warning
  headphone
  send
  pipelines
  person
  category
  contact
  clipboard
}

enum Plan {
  price_5s4vyf751ecs7os
  price_pxzapqw3zkv8lzv
}

model User {
  id            String         @id @default(uuid())
  accountId     String?        @unique
  email         String         @unique
  firstName     String
  lastName      String
  avatarUrl     String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Account       Account?
  Notifications Notification[]

  @@index([accountId])
}

model Account {
  id                 String          @id @default(uuid())
  accountName        String
  accountEmail       String
  connectedAccountId String?         @default("")
  title              String          @default("")
  logo               String          @default("")
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
  userId             String          @unique
  User               User            @relation(fields: [userId], references: [id])
  address            String
  city               String
  state              String
  zipCode            String
  country            String
  goal               Int?
  Subscription       Subscription?
  Media              Media[]
  Notifications      Notification[]
  SidebarOption      SidebarOption[]

  @@index([userId])
}

model SidebarOption {
  id        String   @id @default(uuid())
  name      String   @default("Menu")
  link      String   @default("#")
  icon      Icon     @default(info)
  accountId String
  Account   Account  @relation(fields: [accountId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([accountId])
}

model Media {
  id        String   @id @default(uuid())
  type      String?
  name      String
  link      String   @unique
  accountId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Account   Account  @relation(fields: [accountId], references: [id])

  @@index([accountId])
}

model Subscription {
  id                   String   @id @default(uuid())
  plan                 Plan?
  price                String?
  active               Boolean  @default(false)
  priceId              String
  accountId            String   @unique
  currentPeriodEndDate DateTime
  subscriptionId       String   @unique
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  Account              Account  @relation(fields: [accountId], references: [id])

  @@index([accountId])
}

model Notification {
  id           String   @id @default(uuid())
  notification String
  accountId    String
  Account      Account  @relation(fields: [accountId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?

  @@index([accountId])
  @@index([userId])
}


